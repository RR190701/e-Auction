[{"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js":"1","C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js":"2","C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js":"3","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js":"4","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js":"5","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js":"6","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\routing\\PrivateRoute.js":"7","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js":"8","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Navbar\\Navbar.js":"9","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js":"10","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AllBids\\allBids.js":"11","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionDetails\\AuctionDetails.js":"12","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js":"13","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js":"14","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js":"15","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js":"16","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js":"17","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ActiveAuctions\\ActiveAuctions.js":"18","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Footer\\Footer.js":"19","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js":"20","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js":"21"},{"size":500,"mtime":1610994752609,"results":"22","hashOfConfig":"23"},{"size":1510,"mtime":1619342105049,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":5475,"mtime":1619975273769,"results":"26","hashOfConfig":"23"},{"size":4719,"mtime":1619973540883,"results":"27","hashOfConfig":"23"},{"size":15229,"mtime":1619973540894,"results":"28","hashOfConfig":"23"},{"size":530,"mtime":1617965982356,"results":"29","hashOfConfig":"23"},{"size":5969,"mtime":1619973540887,"results":"30","hashOfConfig":"23"},{"size":3048,"mtime":1619973540889,"results":"31","hashOfConfig":"23"},{"size":2272,"mtime":1619533919342,"results":"32","hashOfConfig":"23"},{"size":4909,"mtime":1619371240670,"results":"33","hashOfConfig":"23"},{"size":8439,"mtime":1619973518857,"results":"34","hashOfConfig":"23"},{"size":6169,"mtime":1619973540897,"results":"35","hashOfConfig":"23"},{"size":414,"mtime":1614791924413,"results":"36","hashOfConfig":"23"},{"size":540,"mtime":1618125891352,"results":"37","hashOfConfig":"23"},{"size":2587,"mtime":1619533919341,"results":"38","hashOfConfig":"23"},{"size":328,"mtime":1612945930216,"results":"39","hashOfConfig":"23"},{"size":1821,"mtime":1619607407734,"results":"40","hashOfConfig":"23"},{"size":1971,"mtime":1619605384196,"results":"41","hashOfConfig":"23"},{"size":1980,"mtime":1619534324498,"results":"42","hashOfConfig":"23"},{"size":7587,"mtime":1619607557842,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dmh62m",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js",[],["99","100"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js",["101","102"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport TopMenu from './components/Topmenu/TopMenu';\r\nimport SignUp from './components/SignIn/SignUp';\r\nimport LogIn from './components/Login/LogIn';\r\nimport Profile from './containers/Profile/Profile';\r\nimport ForgetPassword from \"./components/ForgetPassword/forgetPassword\"\r\nimport ResetPassword from './components/ResetPassword/ResetPassword';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\n//import PrivateScreen from \"./components/privateScreen\";\r\nimport Navbar from \"./components/Navbar/Navbar\"\r\nimport AuctionDetails from './containers/AuctionDetails/AuctionDetails';\r\nimport AllBids from './containers/AllBids/allBids';\r\nconst App = () => {\r\n\r\n return(\r\n   <React.Fragment>\r\n   \r\n     <Router>\r\n     <Navbar></Navbar>\r\n       <PrivateRoute exact path=\"/profile/:username\" component={Profile}/>\r\n       <Route exact path ='/' exact component = {TopMenu}></Route>\r\n       <Route  exact path ='/log-in' exact component ={LogIn}></Route>\r\n       <Route   exact path ='/sign-up'component ={SignUp}></Route>\r\n       <Route path = \"/ForgetPassword\" component ={ForgetPassword}></Route>\r\n       <Route path = \"/passwordreset/:resetToken\" component ={ResetPassword}></Route>\r\n       <Route path =\"/auction/:auctionID\" component ={AuctionDetails}></Route>\r\n       <Route path=\"/allBids/:auctionID\" component ={AllBids}></Route>\r\n     </Router>\r\n   </React.Fragment>\r\n );\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js",["103","104"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js",["105","106"],"import React ,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n// import Joi from \"joi-browser\";\r\nimport \"./style.css\";\r\nimport { ToastContainer, toast, Zoom, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n      ForgetPasswordButton: {\r\n        \r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: \"5px\",\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            width:'17rem',\r\n            padding: '0 30px ',\r\n            // marginTop:'2rem',\r\n            // marginBottom:'2rem', \r\n      }\r\n    \r\n  }));\r\n\r\n\r\nconst ForgetPassword = (history) => {\r\n\r\n    const classes = useStyles();\r\n\r\n  //  const [account, setAccount] = useState({ email:\"\"});\r\n   // const [errors, setErrors] = useState({});\r\n    // const [error, setError] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n   // const [success, setSuccess] = useState(\"\");\r\n\r\n  const forgetPasswordHandler = async (e) => {\r\n    e.preventDefault();    \r\n    const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n        try{\r\n            const {data} = await axios.post(\"/api/auth/forgetpassword\", {email}, config);\r\n\r\n            toast.success(data.data, {\r\n              className :\"error-toast\",\r\n              position:toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n             \r\n        }catch (error) {\r\n            \r\n          popError(error.response.data.error);\r\n          //setError(error.response.data.error)\r\n          console.log(error.response.data.error);\r\n          setEmail(\"\");\r\n          setTimeout(() => {\r\n            //setError(\"\");\r\n          }, 5000);\r\n          \r\n        }\r\n    }\r\n\r\n    \r\n  // const  schema = {\r\n  //   email: Joi.string().email().required().label(\"Email Address\")\r\n  // };\r\n\r\n    \r\n//     const HandleSubmit =(e) =>{\r\n//       e.preventDefault();\r\n//       const errors  = validate();\r\n//       (errors)?setErrors(errors):setErrors({});\r\n//       if(errors)return;\r\n  \r\n  \r\n//         //call server\r\n//   alert(JSON.stringify(account))\r\n//           }\r\n  \r\n\r\n//     const validate = () =>{\r\n    \r\n//     const {error} = Joi.validate(account, schema, {abortEarly:false}); //will return errors after checkig for all the fields\r\n//     if(!error)return null;\r\n\r\n//     const errors = {};\r\n//     for(let item of error.details)\r\n//     errors[item.path[0]]=item.message;\r\n\r\n// return errors;\r\n\r\n//     }\r\n\r\n//     const validateProperty = ({name, value}) =>{\r\n  \r\n//       const obj = {[name]: value};\r\n//       const subSchema = {\r\n//       [name]:schema[name]\r\n//       }\r\n\r\n//       const {error} = Joi.validate(obj, subSchema)\r\n//       return error? error.details[0].message:null;\r\n\r\n\r\n//     }    \r\n\r\n  //  const HandleChange = ({currentTarget:input}) =>{\r\n  //   const a = {...account};\r\n  //   a[input.name]= input.value;\r\n\r\n  //   const e = {...errors};\r\n  //   const errorMessage = validateProperty(input);\r\n  //   if(errorMessage) e[input.name] = errorMessage;\r\n  //   else delete e[input.name];\r\n\r\n\r\n  //   setErrors(e);\r\n  //   setAccount(a);\r\n\r\n  //  } \r\n\r\n  const popError = (errorMessage) => {\r\n\r\n    toast.error(errorMessage, {\r\n      className :\"error-toast\",\r\n      position:toast.POSITION.BOTTOM_RIGHT\r\n    });\r\n  }\r\n\r\n\r\n    return ( \r\n<Paper className=\"ForgetPasswordPaper\" elevation={3}>\r\n\r\n<>\r\n      \r\n      <ToastContainer\r\n      draggable ={false}\r\n      autoClose={3000}\r\n      ></ToastContainer>\r\n\r\n      </>\r\n\r\n<h2 className=\"text-center pb-4 pt-5\">FORGET PASSWORD</h2>\r\n      <form onSubmit={forgetPasswordHandler}>\r\n      {/* {error && <span className=\"error-message\">{error}</span>} */}\r\n  {/* {success && <span className=\"success-message\">{success}</span>} */}\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Enter your registered email</label>\r\n    <input type=\"text\" value ={email} \r\n    onChange={(e)=> setEmail(e.target.value)}\r\n    name = \"email\"\r\n     className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"></input>\r\n  </div>\r\n\r\n  <div className=\"text-center pt-4\">\r\n  <Button type =\"submit\" \r\n      className={classes.ForgetPasswordButton} >\r\n        SEND EMAIL\r\n      </Button>\r\n  </div>\r\n \r\n</form>\r\n    \r\n</Paper>\r\n     );\r\n}\r\n \r\nexport default ForgetPassword;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js",["107","108","109","110","111","112","113"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./style.css\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./Error\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast, Zoom, Bounce } from 'react-toastify';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\nconst SignUp = ({ history }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [Confirmpassword, setConfirmpassword] = useState(\"\");\r\n  const [profession, setprofession] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [age, setage] = useState(\"\");\r\n  const [number, setnumber] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n  const emailTakens = [\"test@gmail.com\", \"rashikarawat2001@gmail.com\"];\r\n\r\n  //validation schema\r\n  const ValidationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .trim()\r\n      .min(5, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Name is required\"),\r\n\r\n    profession: Yup.string()\r\n      .trim()\r\n      .min(2, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Profession is required\"),\r\n\r\n    zip: Yup.string()\r\n      .matches(/^[1-9][0-9]{5}$/, \"*Invalid Zip\")\r\n      .required(\"*Zip is required\"),\r\n\r\n    password: Yup.string()\r\n      .trim()\r\n      .required(\"*Password is required.\")\r\n      .min(8, \"*Password is too short - should be 8 chars minimum.\")\r\n      .matches(/^(?=.*[0-9])/, \"*Password must contain a number.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n      .trim()\r\n      .oneOf([Yup.ref(\"password\".trim())], \"Password should match\")\r\n      .required(\"*Password is required.\"),\r\n\r\n    age: Yup.number()\r\n      .required(\"*Age is required\")\r\n      .min(18, \"*Must be above 18\")\r\n      .max(99, \"*Must be younger than 99\"),\r\n\r\n    address: Yup.string()\r\n      .trim()\r\n      .min(10, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*Address is required\"),\r\n\r\n    city: Yup.string()\r\n      .trim()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*City is required\"),\r\n\r\n    about: Yup.string()\r\n      .trim()\r\n      .required(\"*About is required\")\r\n      .min(5, \"Too Short!\")\r\n      .max(250, \"Too Long!\"),\r\n\r\n    number: Yup.string()\r\n      .matches(/\\d{5}([- ]*)\\d{6}/, \"*Invalid phone number\")\r\n      .required(\"*Number is required\"),\r\n\r\n    state: Yup.string().required(\"*State is required\"),\r\n\r\n    email: Yup.string()\r\n      .trim()\r\n      .lowercase()\r\n      .email(\"*Must be a valid email address\")\r\n      .notOneOf(emailTakens, \"*Email already taken\")\r\n      .required(\"*Email is required\"),\r\n  });\r\n  const popError = (errorMessage) => {\r\n\r\n    toast.error(errorMessage, {\r\n      className :\"error-toast\",\r\n      position:toast.POSITION.BOTTOM_RIGHT\r\n    });\r\n  }\r\n  //on handle\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        { username, email, password, number, age, profession, address },\r\n        config\r\n      );\r\n      localStorage.setItem(\"authToken\", data.token);\r\n      localStorage.setItem(\"username\", username);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      popError(error.response.data.error);\r\n      setError(error.response.data.error);\r\n     \r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  //removing confirmPassword\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        // fullname: \"\",\r\n        // profession: \"\",\r\n        // number: \"\",\r\n        // email: \"\",\r\n        // password: \"\",\r\n        confirmPassword: \"\",\r\n        about: \"\",\r\n        // age: \"\",\r\n        // address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={HandleSubmit}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        // handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n      }) => (\r\n        //sign up form\r\n        <Paper className=\"sign-in-form\" elevation={3}>\r\n           <>\r\n      \r\n      <ToastContainer\r\n      draggable ={false}\r\n      autoClose={3000}\r\n      ></ToastContainer>\r\n\r\n      </>\r\n          {/* sign heading */}\r\n          <h1 className=\"text-center pb-5 sign-in-heading\" style={{fontFamily: 'Cursive'}}>SIGN UP</h1>\r\n          <form onSubmit={HandleSubmit} className=\"row g-3\">\r\n            {/* full name */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"fullname\" className=\"form-label\">\r\n                User Name\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                \r\n                color=\"secondary\"\r\n                required\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                onChange={(e) => setusername(e.target.value)}\r\n                id=\"username\"\r\n                onBlur={handleBlur}\r\n                value={username}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error touched={touched.fullname} message={errors.fullname} /> */}\r\n            </div>\r\n\r\n            {/* profession */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"profession\" className=\"form-label\">\r\n                Profession\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                color=\"secondary\"\r\n                required\r\n                label=\"Profession\"\r\n                name=\"profession\"\r\n                id=\"profession\"\r\n                onChange={(e) => setprofession(e.target.value)}\r\n                // onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={profession}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error touched={touched.profession} message={errors.profession} /> */}\r\n            </div>\r\n            {/* phone number */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"number\" className=\"form-label\">\r\n                Contact Number\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                required\r\n                color=\"secondary\"\r\n                label=\"Contact Number\"\r\n                name=\"number\"\r\n                id=\"number\"\r\n                onChange={(e) => setnumber(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={number}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error touched={touched.number} message={errors.number} /> */}\r\n            </div>\r\n\r\n            {/* email */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"email\" className=\"form-label\">\r\n                Email ID\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                required\r\n                color=\"secondary\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                onBlur={handleBlur}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error touched={touched.email} message={errors.email} /> */}\r\n            </div>\r\n\r\n            {/* password */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label> */}\r\n              <TextField\r\n              required\r\n              label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                color=\"secondary\"\r\n                id=\"password\"\r\n                onChange={(e) => setpassword(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={password}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error touched={touched.password} message={errors.password} /> */}\r\n            </div>\r\n\r\n            {/* confirm password */}\r\n            <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                Confirm Password\r\n              </label> */}\r\n              <TextField\r\n              // required\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                color=\"secondary\"\r\n                label=\"Confirm Password\"\r\n                onChange={(e) => setConfirmpassword(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={values.confirmPassword}\r\n                className=\"form-control\"\r\n              />\r\n              {/* <Error\r\n                touched={touched.confirmPassword}\r\n                message={errors.confirmPassword}\r\n              /> */}\r\n            </div>\r\n\r\n            {/* about */}\r\n            <div className=\"col-md-12\">\r\n              {/* <label htmlFor=\"about\" className=\"form-label\">\r\n                About\r\n              </label> */}\r\n              <TextField\r\n              // required\r\n                type=\"text\"\r\n                label=\"About\"\r\n                className=\"form-control\"\r\n                color=\"secondary\"\r\n                name=\"about\"\r\n                // onChange={(e) => setabout(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={values.about}\r\n                id=\"about\"\r\n                placeholder=\"Tell us something about you..\"\r\n              />\r\n              {/* <Error touched={touched.about} message={errors.about} /> */}\r\n            </div>\r\n\r\n            {/* age */}\r\n            <div className=\"col-md-3\">\r\n              {/* <label htmlFor=\"age\" className=\"form-label\">\r\n                Age\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                required\r\n                label=\"Age\"\r\n                color=\"secondary\"\r\n                className=\"form-control\"\r\n                name=\"age\"\r\n                onChange={(e) => setage(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={age}\r\n                id=\"age\"\r\n              />\r\n              {/* <Error touched={touched.age} message={errors.age} /> */}\r\n            </div>\r\n\r\n            {/* address */}\r\n            <div className=\"col-md-9\">\r\n              {/* <label htmlFor=\"Address\" className=\"form-label\">\r\n                Full Address\r\n              </label> */}\r\n              <TextField\r\n                type=\"text\"\r\n                required\r\n                label=\"Address\"\r\n                color=\"secondary\"\r\n                className=\"form-control\"\r\n                onChange={(e) => setaddress(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={address}\r\n                id=\"address\"\r\n                placeholder=\"Full Address ...\"\r\n              />\r\n              {/* <Error touched={touched.address} message={errors.address} /> */}\r\n            </div>\r\n\r\n            {/* city */}\r\n            {/* <div className=\"col-md-6\">\r\n              {/* <label htmlFor=\"city\" className=\"form-label\">\r\n                City\r\n              </label> */}\r\n              {/* <TextField\r\n                type=\"text\"\r\n                required\r\n                label=\"City\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                id=\"city\"\r\n                value={values.city}\r\n              />\r\n              <Error touched={touched.city} message={errors.city} />\r\n            </div> */}\r\n\r\n            {/* state */}\r\n            {/* <div className=\"col-md-4\">\r\n              <label htmlFor=\"state\" className=\"form-label\">\r\n                State\r\n              </label>\r\n              <select\r\n                id=\"state\"\r\n                className=\"form-select\"\r\n                type=\"text\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                id=\"state\"\r\n                value={values.state}\r\n              >\r\n                <option selected></option>\r\n                <option>Andhra Pradesh</option>\r\n                <option>Arunachal Pradesh</option>\r\n                <option>Assam</option>\r\n                <option>Bihar</option>\r\n                <option>Chhattisgarh</option>\r\n                <option>Goa</option>\r\n                <option>Gujarat</option>\r\n                <option>Haryana</option>\r\n                <option>Himachal Pradesh</option>\r\n                <option>Jharkhand</option>\r\n                <option>Karnataka</option>\r\n                <option>Kerala</option>\r\n                <option>Madhya Pradesh</option>\r\n                <option>Maharashtra</option>\r\n                <option>Manipur</option>\r\n                <option>Meghalaya</option>\r\n                <option>Mizoram</option>\r\n                <option>Nagaland</option>\r\n                <option>Odisha</option>\r\n                <option>Punjab</option>\r\n                <option>Rajasthan</option>\r\n                <option>Sikkim</option>\r\n                <option>Tamil Nadu</option>\r\n                <option>Telangana</option>\r\n                <option>Tripura</option>\r\n                <option>Uttar Pradesh</option>\r\n                <option>Uttarakhand</option>\r\n                <option>West Bengal</option>\r\n              </select>\r\n              <Error touched={touched.state} message={errors.state} />\r\n            </div> */}\r\n\r\n            {/* zip */}\r\n            {/* <div className=\"col-md-2\">\r\n              <label htmlfor=\"zip\" className=\"form-label\">\r\n                Zip\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"zip\"\r\n                id=\"zip\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.zip}\r\n              />\r\n              <Error touched={touched.zip} message={errors.zip} />\r\n            </div> */} \r\n            <div className=\"col-12\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary sign-in-button\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\routing\\PrivateRoute.js",["114","115"],"import { Component } from 'react';\r\nimport {Redirect, Route, route} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={\r\n            (props) => \r\n                localStorage.getItem(\"authToken\") ? (\r\n                    <Component {...props}/>\r\n                ) : (\r\n                    <Redirect to=\"/log-in\"/>\r\n                )\r\n                \r\n            \r\n        }\r\n        />\r\n    )\r\n}\r\nexport default PrivateRoute;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast, Zoom, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n\r\n  LoginButton: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    border: 0,\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    width: \"100%\",\r\n    padding: \"0 30px \",\r\n    // marginTop:'2rem',\r\n    // marginBottom:'2rem',\r\n  },\r\n}));\r\n\r\nconst LogIn = ({ history }) => {\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // const [account, setAccount] = useState({ email :\"\", password: \"\"});\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(`/profile/${localStorage.getItem(\"username\")}`);\r\n    }\r\n  }, [history]);\r\n\r\n  //joi schema\r\n  // const  schema = {\r\n  //   email: Joi.string().email().required().label(\"Email Address\"),\r\n  //   password: Joi.string().required().label(\"Password\")\r\n  // };\r\n\r\n  //error toast fucntion\r\n  const popError = (errorMessage) => {\r\n\r\n    toast.error(errorMessage, {\r\n      className :\"error-toast\",\r\n      position:toast.POSITION.BOTTOM_RIGHT\r\n    });\r\n  }\r\n\r\n  const LoginSubmit = async (e) => {\r\n  \r\n    e.preventDefault();\r\n\r\n    // const err = validate();\r\n    // setErrors(err);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n     \r\n      \r\n      localStorage.setItem(\"authToken\", data.token);\r\n      localStorage.setItem(\"username\", data.username)\r\n     history.push(`/profile/${data.username}`);\r\n    } catch (error) {\r\n      popError(error.response.data.error);\r\n      console.log(error.response.data.error);\r\n      setTimeout(() => {\r\n        setErrors(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  //     const validate = () =>{\r\n\r\n  //     const {error} = Joi.validate(email, schema, {abortEarly:false});\r\n  //     if(!error)return null;\r\n\r\n  //     const errors = {};\r\n  //     for(let item of error.details)\r\n  //     errors[item.path[0]]=item.message;\r\n\r\n  // return errors;\r\n\r\n  //     }\r\n\r\n\r\n  //     const validateProperty = ({name, value}) =>{\r\n\r\n  //       const obj = {[name]: value};\r\n  //       const subSchema = {\r\n  //       [name]:schema[name]\r\n  //       }\r\n\r\n  //       const {error} = Joi.validate(obj, subSchema)\r\n  //       return error? error.details[0].message:null;\r\n\r\n  //     }\r\n\r\n  //  const HandleChange = ({currentTarget:input}) =>{\r\n  //   const a = {email};\r\n  //   const b = {password}\r\n  //   a[input.name]= input.value;\r\n  //   b[input.name]= input.value;\r\n\r\n  //   const e = {...errors};\r\n  //   const errorMessage = validateProperty(input);\r\n  //   if(errorMessage) e[input.name] = errorMessage;\r\n  //   else delete e[input.name];\r\n\r\n  //   setErrors(e);\r\n  //   setEmail(a);\r\n  //   setpassword(b);\r\n\r\n  //  }\r\n\r\n  return (\r\n    <Paper className=\"LoginPaper\" elevation={3}>\r\n      <>\r\n      \r\n      <ToastContainer\r\n      draggable ={false}\r\n      autoClose={3000}\r\n      ></ToastContainer>\r\n\r\n      </>\r\n      <h1 className=\"text-center pb-4 pt-5\" style={{fontFamily: \"cursive\"}}>LOG IN</h1>\r\n      <form onSubmit={LoginSubmit}>\r\n        <div className=\"mb-3\">\r\n          {/* <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email\r\n          </label> */}\r\n          <TextField\r\n          required \r\n\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            // tabIndex={1}\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          {errors.email && (\r\n            <div className=\"alert alert-danger\">{errors.email}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          {/* <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label> */}\r\n          <TextField\r\n          required\r\n          label=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setpassword(e.target.value)}\r\n            name=\"password\"\r\n            // tabIndex={3}\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n          />\r\n          {errors.password && (\r\n            <div className=\"alert alert-danger\">{errors.password}</div>\r\n          )}\r\n        </div>\r\n        <div className=\"text-center pt-4\">\r\n          <Button type=\"submit\" tabIndex={4} className={classes.LoginButton}>\r\n            LOGIN\r\n          </Button>\r\n        </div>\r\n\r\n        <div className = \"helpful-link\">\r\n        <Link to=\"/ForgetPassword\" style = {{\"textDecoration\":\"none\"}} tabIndex={2}>\r\n              Forget Password?\r\n            </Link>\r\n           \r\n        <Link to=\"/sign-up\" style = {{\"marginLeft\":\".5rem\", \"textDecoration\":\"none\"}} tabIndex={2}>\r\n              Create a new account.\r\n            </Link>\r\n          \r\n       \r\n        </div>\r\n      \r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Navbar\\Navbar.js",["119"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { MdHome } from \"react-icons/md\";\r\nimport \"./style.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // menuButton: {\r\n  //   marginRight: theme.spacing(1),\r\n  // },\r\n  title: {\r\n    flexGrow: 1,\r\n    fontFamily:\"Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\"\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    localStorage.removeItem(\"username\");\r\n    const { history } = props;\r\n    history.push(\"/log-in\");\r\n    //console.log(props);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className=\"home-icon-div\"\r\n            title = \"home\"\r\n          >\r\n<MenuIcon></MenuIcon>\r\n          </IconButton>\r\n          <Typography\r\n            style={{ fontFamily: \"sans-serif\" }}\r\n            variant=\"h5\"\r\n            className={classes.title}\r\n           \r\n          ><Link to =\"/\" className =\"eAuction-home\">\r\n           eAuction\r\n          </Link>\r\n          </Typography>\r\n          {localStorage.getItem(\"authToken\") ? (\r\n            <div>\r\n              \r\n              <Button className=\"header\" ><Link className =\"top-navbar-links\"  to ={`/profile/${localStorage.getItem(\"username\")}`} >\r\n              <CgProfile fontSize=\"1.8rem\" padding=\"0\" fill=\"white\"/>\r\n              </Link></Button>\r\n              <Button className=\"header log-out-button\" onClick={logoutHandler}>\r\n                Logout\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n             <Button  className=\"header\"><Link className =\"top-navbar-links\"  to = \"/log-in\">\r\n                LogIN\r\n              </Link></Button> \r\n              <Button className=\"header \"><Link className =\"top-navbar-links\" to = \"/sign-up\">\r\n                SignUP\r\n              </Link></Button>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js",["120","121"],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport \"./Profile.css\";\r\nimport SideBar from \"./../Profile-sidebar/Sidebar\";\r\nimport ProfileBar from \"./../Profile-center/ProfileBar\";\r\n\r\nconst Profile = ({ history, match }) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [profession, setprofession] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [age, setage] = useState(\"\");\r\n  const [about, setabout] = useState(\"\");\r\n  const [number, setnumber] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/log-in\");\r\n    }\r\n\r\n    const fetchPrivateData = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n      \r\n      \r\n\r\n      try {\r\n\r\n        //  const { data } = await axios.get(\"/api/private/\", config);\r\n        // console.log(localStorage.getItem(\"email\"))\r\n        const { data } = await axios.get(`/api/private/profile/${match.params.username}`, config);\r\n        console.log(data);\r\n        setPrivateData(data.data);\r\n        setusername(data.user.username)\r\n        setemail(data.user.email)\r\n        setprofession(data.user.profession)\r\n        setaddress(data.user.address)\r\n        setnumber(data.user.number)\r\n        setage(data.user.age)\r\n        setabout(data.user.about)\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        localStorage.removeItem(\"username\");\r\n        setError(\"not authorized\");\r\n      }\r\n    };\r\n    fetchPrivateData();\r\n  }, [history]);\r\n\r\n\r\n  return (\r\n    <div class=\"Profile-div\">\r\n      <div class=\"side-bar\">\r\n        <SideBar username={username} profession={profession}></SideBar>\r\n      </div>\r\n      <div class=\"profile-bar\">\r\n        <ProfileBar username={username} email={email} age={age} number={number} about={about} address={address} />\r\n\r\n          <div style={{ backgroundColor: \"green\" }}>{privateData}</div>\r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AllBids\\allBids.js",["122","123"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport axios from \"axios\";\r\nimport './style.css'\r\n\r\nconst columns = [\r\n\r\n  { id: 'username', label: 'Username', minWidth: 190 },\r\n  {\r\n    id: 'bid',\r\n    label: 'Bid Amount',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction createData(username, bid) {\r\n  return { username, bid};\r\n}\r\n\r\n// const rows = [\r\n//         createData('India',  3287263),\r\n//         createData('China', 9596961),\r\n//         createData('Italy',301340),\r\n//         createData('United States', 9833520),\r\n//         createData('Canada', 9984670),\r\n//         createData('Australia', 7692024),\r\n//         createData('Germany', 357578)\r\n//       ];\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst AllBids = ({history, match}) => { \r\n    \r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    \r\nconst [allBids, setAllbids] = React.useState([]);\r\nconst [rows, setRows] = React.useState([]);\r\n\r\nconst makeRows = () =>{\r\n\r\n    const bids = [...allBids];\r\n    bids.forEach(item => (delete item._id));\r\n\r\n    setRows(bids);\r\n}\r\n\r\n    React.useEffect(() => {\r\n        if (!localStorage.getItem(\"authToken\")) {\r\n          history.push(\"/\");\r\n        }\r\n    \r\n        \r\n    const fetchAllBids = async() => {\r\n\r\n        const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n            },\r\n          };\r\n    \r\n        //fetching data\r\n        try{\r\n    \r\n          const { data } = await axios.get(`/api/auction/allBids/${match.params.auctionID}`, config);\r\n          setAllbids(data.allBids);  \r\n          makeRows()\r\n         \r\n    }\r\n    \r\n        catch(error){\r\n       console.log(error.response.data.error);\r\n        }\r\n      }\r\n    \r\n      fetchAllBids();\r\n    \r\n    \r\n      }, [allBids]);\r\n\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n          return (\r\n              <div className = \"all-bids-div\">\r\n                  <div className=\"all-bid-table-div\">\r\n                      {/* table */}\r\n                  <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n\r\n                  </div>\r\n\r\n              </div>\r\n           \r\n          );\r\n        }\r\n        \r\nexport default AllBids;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionDetails\\AuctionDetails.js",["124","125","126"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js",["139","140"],"import React from 'react';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport \"./style.css\";\r\n\r\nconst SideBar = (props) => {\r\n    return (    <div className=\"Profile-side-bar\">\r\n          <img alt = \"profile picture\" className= \"profile-pic\" src= {\"https://tse4.mm.bing.net/th?id=OIP.RBwKn7ERfz_ieSbdE8pUBAHaE0&pid=Api&P=0&w=246&h=1611\"}></img>\r\n          <h1 className =\"Profile-name\">{props.username}</h1>\r\n          <div className = \"Profile-profession\">{props.profession}</div>\r\n    </div> );\r\n}\r\n \r\nexport default SideBar;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ActiveAuctions\\ActiveAuctions.js",["141","142","143","144","145"],"import React ,{useState, useEffect} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Card, CardHeader, CardContent, Divider } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport AuctionCard from \"../../containers/AuctionCard/auctionCard\";\r\nimport axios from 'axios';\r\n\r\nconst ActiveAuctions = ({history}) => {\r\n  \r\n  // const [error, setError] = useState(\"\");\r\n  // const [auctionName, setAuctionName] = useState(\"\");\r\n  const [Data, setData] = useState([]);\r\n  // const [auctioneer, setAuctioneer] = useState(\"\");\r\n  // const [discription, setDiscription] = useState(\"\");\r\n  // const [timings, setTimings] = useState(\"\");\r\n  // const [minEstimation, setminEstimation] = useState(\"\");\r\n  // const [lot, setLot] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n  const fetchData = async () => {\r\n\r\n    \r\n    \r\n\r\n    try {\r\n\r\n \r\n      const { data } = await axios.get('api/auction/activeAuctions');\r\n      // console.log(localStorage.getItem(\"email\"))\r\n      setData(data)\r\n    \r\n    } catch (error) {\r\n      console.log(error.response.data.error);\r\n      \r\n      // setError(\"\");\r\n    }\r\n  };\r\n  fetchData();\r\n},[history]);\r\n\r\n \r\n console.log(Data)\r\n\r\n  return (\r\n    \r\n    <div className =\"upcoming-auction-container\">\r\n \r\n      {\r\n        Data.activeAuctions?.map( (auction) => (\r\n          <AuctionCard\r\n          \r\n          title = {auction.auctionName}\r\n           organisation  = {auction.auctioneer}\r\n           info = {auction.discription}\r\n           date = {auction.timings}\r\n           time = {auction.timings}\r\n          lot = {auction.lot}\r\n           price = {auction.minEstimation}\r\n           location={auction.location}\r\n           auctionID={auction.auctionID}\r\n  \r\n          ></AuctionCard>\r\n        \r\n  ))\r\n      }\r\n     \r\n   \r\n    </div>\r\n  );\r\n};\r\nexport default ActiveAuctions;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Footer\\Footer.js",["146","147","148","149","150","151","152","153","154","155","156"],"import React, { Component } from 'react';\r\nimport { FaFacebookF } from \"react-icons/fa\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport { FiInstagram } from \"react-icons/fi\";\r\nimport { FaLinkedinIn } from \"react-icons/fa\";\r\nimport './Footer.css'\r\n const Footer = () => {\r\n     return(\r\n         <div>\r\n               <body>\r\n    <div class=\"footer-dark\">\r\n        <footer>\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6 col-md-3 item\">\r\n                        <h3>Services</h3>\r\n                        <ul>\r\n                            <li><a href=\"#\">Auctions</a></li>\r\n                            <li><a href=\"#\">Participation</a></li>\r\n                            <li><a href=\"#\">Hosting</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-md-3 item\">\r\n                        <h3>About</h3>\r\n                        <ul>\r\n                            <li><a href=\"#\">Company</a></li>\r\n                            <li><a href=\"#\">Team</a></li>\r\n                            <li><a href=\"#\">Careers</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-md-6 item text\">\r\n                        <h3>Company Name</h3>\r\n                        <p>Praesent sed lobortis mi. Suspendisse vel placerat ligula. Vivamus ac sem lacus. Ut vehicula rhoncus elementum. Etiam quis tristique lectus. Aliquam in arcu eget velit pulvinar dictum vel in justo.</p>\r\n                    </div>\r\n                    <div class=\"col item social\"><a href=\"#\"><FaFacebookF /></a><a href=\"#\"><FaTwitter/></a><a href=\"#\"><FaLinkedinIn/></a><a href=\"#\"><FiInstagram/></a></div>\r\n                </div>\r\n                <h3 class=\"copyright\" style={{color: 'white'}}>Company Name © 2020</h3>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n  \r\n</body>\r\n         </div>\r\n     )\r\n }\r\n export default Footer;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js",["157","158","159","160","161","162","163","164","165"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./auctionCard.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AlarmIcon from \"@material-ui/icons/Alarm\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { AiFillTag } from \"react-icons/ai\";\r\nimport { ToastContainer, toast, Zoom, Bounce } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { GiRecycle } from \"react-icons/gi\";\r\nimport { RiAuctionLine } from \"react-icons/ri\";\r\nimport { CgDetailsMore } from \"react-icons/cg\";\r\nimport DateRangeTwoToneIcon from \"@material-ui/icons/DateRangeTwoTone\";\r\nimport ScheduleTwoToneIcon from \"@material-ui/icons/ScheduleTwoTone\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { BorderLeft } from \"@material-ui/icons\";\r\nimport { Popover } from \"bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\nconst AuctionCard = ({\r\n  title,\r\n  organisation,\r\n  info,\r\n  date,\r\n  time,\r\n  price,\r\n  lot,\r\n  location,\r\n  auctionID\r\n}) => {\r\n  const popError = (errorMessage) => {\r\n\r\n    toast.error(errorMessage, {\r\n      className :\"error-toast\",\r\n      position:toast.POSITION.TOP_RIGHT\r\n    });\r\n  }\r\n const handleBid = (e) => {\r\n  if(localStorage.getItem(\"authToken\")){\r\ne.preventDefault()\r\nconsole.log(\"Yes you are logged in\")\r\n  } else {popError(\"Please Log In First\")}\r\n }\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper elevation={3} className=\"auction-card\">\r\n            <>\r\n      \r\n      <ToastContainer\r\n      draggable ={false}\r\n      autoClose={3000}\r\n      ></ToastContainer>\r\n\r\n      </>\r\n      <div className=\"auction-card-content\">\r\n        <div>\r\n          <div>\r\n            {\" \"}\r\n            <h1 className=\"auction-title\">{title} </h1>\r\n          </div>\r\n        </div>\r\n        <h1 className=\"auction-organisation\">\r\n          - {organisation}, {location}\r\n        </h1>\r\n        \r\n        {/* timings date and time of auction         */}\r\n        <div className=\"timings\">\r\n          <div className=\"timing-date\">\r\n            <DateRangeTwoToneIcon color=\"secondary\"></DateRangeTwoToneIcon>\r\n            <span className=\"timing-content\">{date}</span>\r\n          </div>\r\n\r\n          <div className=\"timing-time\" style={{marginLeft:\"1rem\"}}>\r\n            <ScheduleTwoToneIcon color=\"secondary\"></ScheduleTwoToneIcon>\r\n            <span className=\"timing-content\">{time}</span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* auction information lot, condition, min estimation */}\r\n        <div\r\n          className=\"\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            boxSizing: \"border-box\",\r\n            justifyContent: \"space-evenly\",\r\n            marginTop: \"2.3rem\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n\r\n          {/* lot */}\r\n\r\n            <Paper\r\n              className=\"auc-count-card\"\r\n              elevation={3}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                className=\"auc-info-icon\"\r\n                style={{ backgroundColor: \"#ff004f\",borderTopLeftRadius:\"5px\",borderBottomLeftRadius:\"5px\" ,height:\"100%\", paddingTop:\"0.4rem\", paddingRight:\"0.4rem\", paddingLeft:\"0.4rem\" \r\n             }}\r\n              >\r\n                <AiFillTag size=\"1.8rem\" color=\"white\" />\r\n              </div>\r\n              <div\r\n                className=\"auc-info-text-container\"\r\n                style={{ height:\"100%\",padding:\"0.1rem 1rem 0.1rem 0.5rem\" }}\r\n              >\r\n                <div\r\n                  className=\"counter-value\"\r\n             \r\n                >\r\n                  Lot:\r\n                </div>\r\n                <div className=\"counter-number\" >\r\n                  {lot}\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n\r\n          {/* condition */}\r\n\r\n            <Paper\r\n              className=\"auc-count-card\"\r\n              elevation={3}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                className=\"auc-info-icon\"\r\n                style={{ backgroundColor: \"#ff004f\",borderTopLeftRadius:\"5px\",borderBottomLeftRadius:\"5px\", height:\"100%\", paddingTop:\"0.4rem\", paddingRight:\"0.4rem\", paddingLeft:\"0.4rem\"\r\n}}\r\n              >\r\n                  <GiRecycle size=\"1.8rem\" color=\"white\" />\r\n              </div>\r\n              <div className=\"auc-info-text-container\"\r\n              \r\n              style={{ height:\"100%\",\r\n              padding:\"0.1rem 1rem 0.1rem 0.5rem\"}}>\r\n                <div\r\n                  className=\"counter-value\"\r\n            \r\n                >\r\n                  Condition:\r\n                </div>\r\n                <div\r\n                  className=\"counter-number\"\r\n                >\r\n                  Repairable\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n\r\n          {/* low estimation */}\r\n\r\n            <Paper\r\n              className=\"auc-count-card\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                className=\"auc-info-icon\"\r\n                style={{ backgroundColor: \"#ff004f\",borderTopLeftRadius:\"5px\",borderBottomLeftRadius:\"5px\", height:\"100%\", paddingTop:\"0.4rem\", paddingRight:\"0.4rem\", paddingLeft:\"0.4rem\" }}\r\n                >\r\n                  <BiRupee size=\"1.8rem\" color=\"#fff\" />\r\n              </div>\r\n\r\n              <div className=\"auc-info-text-container\"\r\n                style={{ height:\"100%\", padding:\"0.1rem 1rem 0.1rem 0.5rem\"}}>\r\n                <div\r\n                  className=\"counter-value\"\r\n            \r\n                >\r\n                  Minimum Bid:\r\n                </div>\r\n                <div className=\"counter-number\" >\r\n                  {price}\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n\r\n        {/* discription of auction */}\r\n        <p className=\"auction-info\">{info}</p>\r\n\r\n        <div className=\"auction-card-footer\" style={{justifyContent:\"flex-end\"}}>\r\n          <div style={{display:\"flex\"}}>\r\n            <div style={{display:\"flex\"}}>\r\n              <Tooltip title=\"Set a Reminder\" arrow>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ padding: \"0.3rem\", marginRight: \"2.5rem\" }}\r\n                  aria-label=\"add an alarm\"\r\n                >\r\n                  <AlarmIcon size=\"1.3rem\"/>\r\n                </Button>\r\n              </Tooltip>\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n            <Tooltip title=\"Bid\" arrow>\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"Register-button\"\r\n              color=\"primary\"\r\n              onClick={handleBid}\r\n            ><Link style={{color:\"white\"}} to = {`/auction/${auctionID}`}>\r\n                       <RiAuctionLine size=\"1.3rem\" />\r\n            </Link>\r\n            </Button>\r\n          </Tooltip>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AuctionCard;\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":22,"column":31,"nodeType":"172","endLine":22,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":23,"column":38,"nodeType":"172","endLine":23,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":9,"column":13,"nodeType":"175","messageId":"176","endLine":9,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":37,"column":10,"nodeType":"175","messageId":"176","endLine":37,"endColumn":15},{"ruleId":"173","severity":1,"message":"178","line":8,"column":33,"nodeType":"175","messageId":"176","endLine":8,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":8,"column":39,"nodeType":"175","messageId":"176","endLine":8,"endColumn":45},{"ruleId":"173","severity":1,"message":"180","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":13},{"ruleId":"173","severity":1,"message":"181","line":11,"column":10,"nodeType":"175","messageId":"176","endLine":11,"endColumn":14},{"ruleId":"173","severity":1,"message":"178","line":12,"column":33,"nodeType":"175","messageId":"176","endLine":12,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":12,"column":39,"nodeType":"175","messageId":"176","endLine":12,"endColumn":45},{"ruleId":"173","severity":1,"message":"182","line":13,"column":7,"nodeType":"175","messageId":"176","endLine":13,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":23,"column":10,"nodeType":"175","messageId":"176","endLine":23,"endColumn":15},{"ruleId":"173","severity":1,"message":"183","line":27,"column":10,"nodeType":"175","messageId":"176","endLine":27,"endColumn":25},{"ruleId":"173","severity":1,"message":"184","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":19},{"ruleId":"173","severity":1,"message":"185","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":31},{"ruleId":"173","severity":1,"message":"186","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":11},{"ruleId":"173","severity":1,"message":"178","line":10,"column":33,"nodeType":"175","messageId":"176","endLine":10,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":10,"column":39,"nodeType":"175","messageId":"176","endLine":10,"endColumn":45},{"ruleId":"173","severity":1,"message":"187","line":11,"column":10,"nodeType":"175","messageId":"176","endLine":11,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":54,"column":6,"nodeType":"190","endLine":54,"endColumn":15,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"192","line":31,"column":10,"nodeType":"175","messageId":"176","endLine":31,"endColumn":20},{"ruleId":"188","severity":1,"message":"193","line":105,"column":10,"nodeType":"190","endLine":105,"endColumn":19,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"178","line":6,"column":33,"nodeType":"175","messageId":"176","endLine":6,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":6,"column":39,"nodeType":"175","messageId":"176","endLine":6,"endColumn":45},{"ruleId":"188","severity":1,"message":"195","line":89,"column":5,"nodeType":"190","endLine":89,"endColumn":14,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"181","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":14},{"ruleId":"173","severity":1,"message":"197","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":18},{"ruleId":"173","severity":1,"message":"198","line":10,"column":20,"nodeType":"175","messageId":"176","endLine":10,"endColumn":29},{"ruleId":"173","severity":1,"message":"199","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":13},{"ruleId":"173","severity":1,"message":"200","line":18,"column":10,"nodeType":"175","messageId":"176","endLine":18,"endColumn":18},{"ruleId":"173","severity":1,"message":"201","line":22,"column":8,"nodeType":"175","messageId":"176","endLine":22,"endColumn":13},{"ruleId":"173","severity":1,"message":"202","line":26,"column":41,"nodeType":"175","messageId":"176","endLine":26,"endColumn":48},{"ruleId":"173","severity":1,"message":"203","line":27,"column":10,"nodeType":"175","messageId":"176","endLine":27,"endColumn":20},{"ruleId":"173","severity":1,"message":"204","line":28,"column":10,"nodeType":"175","messageId":"176","endLine":28,"endColumn":21},{"ruleId":"173","severity":1,"message":"205","line":29,"column":10,"nodeType":"175","messageId":"176","endLine":29,"endColumn":19},{"ruleId":"173","severity":1,"message":"206","line":30,"column":10,"nodeType":"175","messageId":"176","endLine":30,"endColumn":21},{"ruleId":"173","severity":1,"message":"207","line":31,"column":10,"nodeType":"175","messageId":"176","endLine":31,"endColumn":25},{"ruleId":"173","severity":1,"message":"208","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":7,"column":11,"nodeType":"211","endLine":7,"endColumn":161},{"ruleId":"173","severity":1,"message":"212","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"213","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":14},{"ruleId":"173","severity":1,"message":"214","line":3,"column":16,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"215","line":3,"column":28,"nodeType":"175","messageId":"176","endLine":3,"endColumn":39},{"ruleId":"173","severity":1,"message":"202","line":3,"column":41,"nodeType":"175","messageId":"176","endLine":3,"endColumn":48},{"ruleId":"173","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":18,"column":33,"nodeType":"211","endLine":18,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":19,"column":33,"nodeType":"211","endLine":19,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":20,"column":33,"nodeType":"211","endLine":20,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":26,"column":33,"nodeType":"211","endLine":26,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":27,"column":33,"nodeType":"211","endLine":27,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":28,"column":33,"nodeType":"211","endLine":28,"endColumn":45},{"ruleId":"216","severity":1,"message":"217","line":35,"column":50,"nodeType":"211","endLine":35,"endColumn":62},{"ruleId":"216","severity":1,"message":"217","line":35,"column":81,"nodeType":"211","endLine":35,"endColumn":93},{"ruleId":"216","severity":1,"message":"217","line":35,"column":109,"nodeType":"211","endLine":35,"endColumn":121},{"ruleId":"216","severity":1,"message":"217","line":35,"column":140,"nodeType":"211","endLine":35,"endColumn":152},{"ruleId":"173","severity":1,"message":"218","line":5,"column":8,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"173","severity":1,"message":"219","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"173","severity":1,"message":"178","line":11,"column":33,"nodeType":"175","messageId":"176","endLine":11,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":11,"column":39,"nodeType":"175","messageId":"176","endLine":11,"endColumn":45},{"ruleId":"173","severity":1,"message":"220","line":16,"column":10,"nodeType":"175","messageId":"176","endLine":16,"endColumn":23},{"ruleId":"173","severity":1,"message":"212","line":20,"column":10,"nodeType":"175","messageId":"176","endLine":20,"endColumn":14},{"ruleId":"173","severity":1,"message":"221","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":20},{"ruleId":"173","severity":1,"message":"222","line":22,"column":10,"nodeType":"175","messageId":"176","endLine":22,"endColumn":17},{"ruleId":"173","severity":1,"message":"223","line":55,"column":9,"nodeType":"175","messageId":"176","endLine":55,"endColumn":16},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Yup' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Zoom' is defined but never used.","'Bounce' is defined but never used.","'Error' is defined but never used.","'Link' is defined but never used.","'useStyles' is assigned a value but never used.","'Confirmpassword' is assigned a value but never used.","'Component' is defined but never used.","'route' is defined but never used.","'Joi' is defined but never used.","'MdHome' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.username'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'createData' is defined but never used.","React Hook React.useEffect has missing dependencies: 'history', 'makeRows', and 'match.params.auctionID'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'auctionID' and 'match.params.auctionID'. Either include them or remove the dependency array.",["228"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Carousel' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'GiCrucifix' is defined but never used.","'FaFacebookF' is defined but never used.","'FaTwitter' is defined but never used.","'FiInstagram' is defined but never used.","'FaSnapchatGhost' is defined but never used.","'propTypes' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Grid' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'CgDetailsMore' is defined but never used.","'BorderLeft' is defined but never used.","'Popover' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [history, match.params.username]",{"range":"235","text":"236"},"Update the dependencies array to be: [allBids, history, makeRows, match.params.auctionID]",{"range":"237","text":"238"},"Update the dependencies array to be: [auctionID, history, match.params.auctionID]",{"range":"239","text":"240"},[1800,1809],"[history, match.params.username]",[2543,2552],"[allBids, history, makeRows, match.params.auctionID]",[3064,3073],"[auctionID, history, match.params.auctionID]"]