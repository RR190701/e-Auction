[{"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js":"1","C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js":"2","C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js":"3","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\privateScreen.js":"4","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js":"5","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js":"6","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js":"7","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js":"8","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js":"9","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js":"10","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\routing\\PrivateRoute.js":"11","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js":"12","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js":"13","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js":"14","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js":"15","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\UpcomingAuctions\\UpcomingAuctions.js":"16","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js":"17","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js":"18","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Navbar\\Navbar.js":"19"},{"size":500,"mtime":1610994752609,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1289,"mtime":1617985987038,"results":"23","hashOfConfig":"21"},{"size":1082,"mtime":1617986007155,"results":"24","hashOfConfig":"21"},{"size":4938,"mtime":1617968709659,"results":"25","hashOfConfig":"21"},{"size":12591,"mtime":1617965982354,"results":"26","hashOfConfig":"21"},{"size":4051,"mtime":1617811777232,"results":"27","hashOfConfig":"21"},{"size":1305,"mtime":1617987054961,"results":"28","hashOfConfig":"21"},{"size":8338,"mtime":1617986536028,"results":"29","hashOfConfig":"21"},{"size":5114,"mtime":1617811777236,"results":"30","hashOfConfig":"21"},{"size":530,"mtime":1617965982356,"results":"31","hashOfConfig":"21"},{"size":414,"mtime":1614791924413,"results":"32","hashOfConfig":"21"},{"size":477,"mtime":1613546352906,"results":"33","hashOfConfig":"21"},{"size":2401,"mtime":1613706547945,"results":"34","hashOfConfig":"21"},{"size":328,"mtime":1612945930216,"results":"35","hashOfConfig":"21"},{"size":1718,"mtime":1615610087665,"results":"36","hashOfConfig":"21"},{"size":2034,"mtime":1613709326828,"results":"37","hashOfConfig":"21"},{"size":1439,"mtime":1616038192155,"results":"38","hashOfConfig":"21"},{"size":1788,"mtime":1617988417439,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"dmh62m",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js",[],["86","87"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js",["88","89"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\privateScreen.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js",["90","91"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Joi from \"joi-browser\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  LoginButton: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    border: 0,\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    width: \"100%\",\r\n    padding: \"0 30px \",\r\n    // marginTop:'2rem',\r\n    // marginBottom:'2rem',\r\n  },\r\n}));\r\n\r\nconst LogIn = ({ history }) => {\r\n  const classes = useStyles();\r\n\r\n  // const [account, setAccount] = useState({ email :\"\", password: \"\"});\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [history]);\r\n\r\n  //joi schema\r\n  // const  schema = {\r\n  //   email: Joi.string().email().required().label(\"Email Address\"),\r\n  //   password: Joi.string().required().label(\"Password\")\r\n  // };\r\n\r\n  const LoginSubmit = async (e) => {\r\n  \r\n    e.preventDefault();\r\n\r\n    // const err = validate();\r\n    // setErrors(err);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n      localStorage.setItem(\"authToken\", data.token);\r\n      history.push(\"/profile\");\r\n    } catch (error) {\r\n      setErrors(error.response.data.error);\r\n      setTimeout(() => {\r\n        setErrors(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  //     const validate = () =>{\r\n\r\n  //     const {error} = Joi.validate(email, schema, {abortEarly:false});\r\n  //     if(!error)return null;\r\n\r\n  //     const errors = {};\r\n  //     for(let item of error.details)\r\n  //     errors[item.path[0]]=item.message;\r\n\r\n  // return errors;\r\n\r\n  //     }\r\n\r\n\r\n  //     const validateProperty = ({name, value}) =>{\r\n\r\n  //       const obj = {[name]: value};\r\n  //       const subSchema = {\r\n  //       [name]:schema[name]\r\n  //       }\r\n\r\n  //       const {error} = Joi.validate(obj, subSchema)\r\n  //       return error? error.details[0].message:null;\r\n\r\n  //     }\r\n\r\n  //  const HandleChange = ({currentTarget:input}) =>{\r\n  //   const a = {email};\r\n  //   const b = {password}\r\n  //   a[input.name]= input.value;\r\n  //   b[input.name]= input.value;\r\n\r\n  //   const e = {...errors};\r\n  //   const errorMessage = validateProperty(input);\r\n  //   if(errorMessage) e[input.name] = errorMessage;\r\n  //   else delete e[input.name];\r\n\r\n  //   setErrors(e);\r\n  //   setEmail(a);\r\n  //   setpassword(b);\r\n\r\n  //  }\r\n\r\n  return (\r\n    <Paper className=\"LoginPaper\" elevation={3}>\r\n      <h1 className=\"text-center pb-4 pt-5\">LOG IN</h1>\r\n      <form onSubmit={LoginSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            tabIndex={1}\r\n            className=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></input>\r\n          {/* {errors.email && (\r\n            <div className=\"alert alert-danger\">{errors.email}</div>\r\n          )} */}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setpassword(e.target.value)}\r\n            name=\"password\"\r\n            tabIndex={3}\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n          ></input>\r\n          {/* {errors.password && (\r\n            <div className=\"alert alert-danger\">{errors.password}</div>\r\n          )} */}\r\n        </div>\r\n        <div className=\"text-center pt-4\">\r\n          <Button type=\"submit\" tabIndex={4} className={classes.LoginButton}>\r\n            LOGIN\r\n          </Button>\r\n        </div>\r\n\r\n        <div className = \"helpful-link\">\r\n        <Link to=\"/ForgetPassword\" style = {{\"textDecoration\":\"none\"}} tabIndex={2}>\r\n              Forget Password?\r\n            </Link>\r\n           \r\n        <Link to=\"/sign-up\" style = {{\"marginLeft\":\".5rem\", \"textDecoration\":\"none\"}} tabIndex={2}>\r\n              Create a new account.\r\n            </Link>\r\n          \r\n       \r\n        </div>\r\n      \r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js",["92","93","94"],"import React, { useState, useEffect  } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./style.css\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./Error\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst SignUp = ({history}) => {\r\nconst [error, setError] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [username, setusername] = useState(\"\");\r\nconst [password, setpassword] = useState(\"\");\r\n  \r\n\r\nuseEffect(() => {\r\n  if(localStorage.getItem(\"authToken\")){\r\n    history.push(\"/\");\r\n  }\r\n}, [history])\r\n\r\nconst emailTakens = [\r\n    \"test@gmail.com\",\r\n    \"rashikarawat01@gmail.com\"\r\n  ]\r\n\r\n  //validation schema\r\n  const ValidationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n    .trim()\r\n      .min(5, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Name is required\"),\r\n\r\n      profession: Yup.string()\r\n      .trim()\r\n      .min(2, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Profession is required\"),\r\n\r\n    zip: Yup.string()\r\n      .matches(/^[1-9][0-9]{5}$/,\r\n        \"*Invalid Zip\")\r\n      .required(\"*Zip is required\"),\r\n\r\n    password: Yup.string()\r\n    .trim()\r\n      .required(\"*Password is required.\")\r\n      .min(8, \"*Password is too short - should be 8 chars minimum.\")\r\n      .matches(/^(?=.*[0-9])/, \"*Password must contain a number.\"),\r\n\r\n      \r\n    confirmPassword: Yup.string()\r\n    .trim()\r\n    .oneOf([Yup.ref('password'.trim())],\"Password should match\")\r\n    .required(\"*Password is required.\"),\r\n\r\n    age: Yup.number()\r\n      .required(\"*Age is required\")\r\n      .min(18, \"*Must be above 18\")\r\n      .max(99, \"*Must be younger than 99\"),\r\n\r\n    address: Yup.string()\r\n    .trim()\r\n      .min(10, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*Address is required\"),\r\n\r\n    city: Yup.string()\r\n    .trim()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*City is required\"),\r\n\r\n\r\n      about: Yup.string()\r\n      .trim()\r\n      .required(\"*About is required\")\r\n      .min(5, \"Too Short!\")\r\n      .max(250, \"Too Long!\"),\r\n\r\n    number: Yup.string()\r\n      .matches(/\\d{5}([- ]*)\\d{6}/, \"*Invalid phone number\")\r\n      .required(\"*Number is required\"),\r\n\r\n      \r\n    state: Yup.string()\r\n    .required(\"*State is required\"),\r\n\r\n    email: Yup.string()\r\n    .trim()\r\n      .lowercase()\r\n      .email(\"*Must be a valid email address\")\r\n      .notOneOf(emailTakens, \"*Email already taken\")\r\n      .required(\"*Email is required\"),\r\n  });\r\n\r\n  //on handle\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }\r\ntry {\r\n  const {data} = await axios.post(\"/api/auth/register\", {username, email, password},config);\r\nlocalStorage.setItem(\"authToken\", data.token);\r\nhistory.pushState('/');\r\n} catch (error)\r\n{\r\n  setError(error.response.data.error)\r\n  setTimeout(() => {\r\n    setError(\"\");\r\n  }, 5000);\r\n  }\r\n}\r\n    \r\n\r\n\r\n\r\n  //removing confirmPassword\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        // fullname: \"\",\r\n        profession:\"\",\r\n        number: \"\",\r\n        // email: \"\",\r\n        // password: \"\",\r\n        confirmPassword: \"\",\r\n        about:\"\",\r\n        age: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state:\"\",\r\n        zip: \"\",\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={HandleSubmit}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n      }) => (\r\n\r\n        //sign up form\r\n        <Paper className=\"sign-in-form\" elevation={3}>\r\n          {/* sign heading */}\r\n          <h1 className=\"text-center pb-5 sign-in-heading\">SIGN IN</h1>\r\n          <form onSubmit={HandleSubmit} className=\"row g-3\">\r\n            {/* full name */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"fullname\" className=\"form-label\">\r\n                User Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                onChange={(e)=> setusername(e.target.value)}\r\n                id=\"username\"\r\n                onBlur={handleBlur}\r\n                value={username}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.fullname} message={errors.fullname} />\r\n            </div>\r\n\r\n            {/* profession */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"profession\" className=\"form-label\">\r\n                Profession\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"profession\"\r\n                id=\"profession\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.profession}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.profession} message={errors.profession} />\r\n            </div>\r\n\r\n            {/* phone number */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"number\" className=\"form-label\">\r\n                Contact Number\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"number\"\r\n                id=\"number\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.number}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.number} message={errors.number} />\r\n            </div>\r\n\r\n            {/* email */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email ID\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n                value={email}\r\n                onBlur={handleBlur}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.email} message={errors.email} />\r\n            </div>\r\n\r\n            {/* password */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={(e)=> setpassword(e.target.value)}\r\n                onBlur={handleBlur}\r\n                value={password}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.password} message={errors.password} />\r\n            </div>\r\n\r\n             {/* confirm password */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                 value={values.confirmPassword}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.confirmPassword} message={errors.confirmPassword} />\r\n            </div>\r\n\r\n             {/* about */}\r\n            <div className=\"col-md-12\">\r\n              <label htmlFor=\"about\" className=\"form-label\">\r\n                About\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"about\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.about}\r\n                id=\"about\"\r\n                placeholder=\"Tell us something about you..\"\r\n              />\r\n              <Error touched={touched.about} message={errors.about} />\r\n            </div>\r\n\r\n            {/* age */}\r\n            <div className=\"col-md-3\">\r\n              <label htmlFor=\"age\" className=\"form-label\">\r\n                Age\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"age\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.age}\r\n                id=\"age\"\r\n              ></input>\r\n              <Error touched={touched.age} message={errors.age} />\r\n            </div>\r\n\r\n             {/* address */}\r\n            <div className=\"col-md-9\">\r\n              <label htmlFor=\"Address\" className=\"form-label\">\r\n                Full Address\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.address}\r\n                id=\"address\"\r\n                placeholder=\"Full Address ...\"\r\n              />\r\n              <Error touched={touched.address} message={errors.address} />\r\n            </div>\r\n             \r\n              {/* city */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"city\" className=\"form-label\">\r\n                City\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"city\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                id=\"city\"\r\n                value={values.city}\r\n              />\r\n              <Error touched={touched.city} message={errors.city} />\r\n            </div>\r\n\r\n             {/* state */}\r\n            <div className=\"col-md-4\">\r\n              <label htmlFor=\"state\" className=\"form-label\">\r\n                State\r\n              </label>\r\n              <select id=\"state\" className=\"form-select\"\r\n                 type=\"text\"\r\n                 name = \"state\"\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n                 id=\"state\"\r\n                 value={values.state}>\r\n\r\n                <option selected></option>\r\n                <option>Andhra Pradesh</option>\r\n                <option>Arunachal Pradesh</option>\r\n                <option>Assam</option>\r\n                <option>Bihar</option>\r\n                <option>Chhattisgarh</option>\r\n                <option>Goa</option>\r\n                <option>Gujarat</option>\r\n                <option>Haryana</option>\r\n                <option>Himachal Pradesh</option>\r\n                <option>Jharkhand</option>\r\n                <option>Karnataka</option>\r\n                <option>Kerala</option>\r\n                <option>Madhya Pradesh</option>\r\n                <option>Maharashtra</option>\r\n                <option>Manipur</option>\r\n                <option>Meghalaya</option>\r\n                <option>Mizoram</option>\r\n                <option>Nagaland</option>\r\n                <option>Odisha</option>\r\n                <option>Punjab</option>\r\n                <option>Rajasthan</option>\r\n                <option>Sikkim</option>\r\n                <option>Tamil Nadu</option>\r\n                <option>Telangana</option>\r\n                <option>Tripura</option>\r\n                <option>Uttar Pradesh</option>\r\n                <option>Uttarakhand</option>\r\n                <option>West Bengal</option>\r\n              </select>\r\n              <Error touched={touched.state} message={errors.state} />\r\n            </div>\r\n\r\n             {/* zip */}\r\n            <div className=\"col-md-2\">\r\n              <label htmlfor=\"zip\" className=\"form-label\">\r\n                Zip\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name= \"zip\"\r\n                id=\"zip\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.zip}\r\n              />\r\n              <Error touched={touched.zip} message={errors.zip} />\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary sign-in-button\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js",["95","96","97","98"],"import React ,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Joi from \"joi-browser\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n      ForgetPasswordButton: {\r\n        \r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: \"5px\",\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            width:'17rem',\r\n            padding: '0 30px ',\r\n            // marginTop:'2rem',\r\n            // marginBottom:'2rem', \r\n      }\r\n    \r\n  }));\r\n\r\n\r\nconst ForgetPassword = (history) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [account, setAccount] = useState({ email:\"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n  const forgetPasswordHandler = async (e) => {\r\n    e.preventDefault();    \r\n    const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n        try{\r\n            const {data} = await axios.post(\"/api/auth/forgetpassword\", {email}, config);\r\n            setSuccess(data.data)\r\n             \r\n        }catch (error) {\r\n            \r\n          setError(error.response.data.error)\r\n          setEmail(\"\");\r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 5000);\r\n          \r\n        }\r\n    }\r\n\r\n    \r\n  // const  schema = {\r\n  //   email: Joi.string().email().required().label(\"Email Address\")\r\n  // };\r\n\r\n    \r\n//     const HandleSubmit =(e) =>{\r\n//       e.preventDefault();\r\n//       const errors  = validate();\r\n//       (errors)?setErrors(errors):setErrors({});\r\n//       if(errors)return;\r\n  \r\n  \r\n//         //call server\r\n//   alert(JSON.stringify(account))\r\n//           }\r\n  \r\n\r\n//     const validate = () =>{\r\n    \r\n//     const {error} = Joi.validate(account, schema, {abortEarly:false}); //will return errors after checkig for all the fields\r\n//     if(!error)return null;\r\n\r\n//     const errors = {};\r\n//     for(let item of error.details)\r\n//     errors[item.path[0]]=item.message;\r\n\r\n// return errors;\r\n\r\n//     }\r\n\r\n//     const validateProperty = ({name, value}) =>{\r\n  \r\n//       const obj = {[name]: value};\r\n//       const subSchema = {\r\n//       [name]:schema[name]\r\n//       }\r\n\r\n//       const {error} = Joi.validate(obj, subSchema)\r\n//       return error? error.details[0].message:null;\r\n\r\n\r\n//     }    \r\n\r\n  //  const HandleChange = ({currentTarget:input}) =>{\r\n  //   const a = {...account};\r\n  //   a[input.name]= input.value;\r\n\r\n  //   const e = {...errors};\r\n  //   const errorMessage = validateProperty(input);\r\n  //   if(errorMessage) e[input.name] = errorMessage;\r\n  //   else delete e[input.name];\r\n\r\n\r\n  //   setErrors(e);\r\n  //   setAccount(a);\r\n\r\n  //  } \r\n\r\n\r\n    return ( \r\n<Paper className=\"ForgetPasswordPaper\" elevation={3}>\r\n\r\n<h2 className=\"text-center pb-4 pt-5\">FORGET PASSWORD</h2>\r\n      <form onSubmit={forgetPasswordHandler}>\r\n      {error && <span className=\"error-message\">{error}</span>}\r\n  {success && <span className=\"success-message\">{success}</span>}\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Enter your registered email</label>\r\n    <input type=\"text\" value ={email} \r\n    onChange={(e)=> setEmail(e.target.value)}\r\n    name = \"email\"\r\n     className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"></input>\r\n     {errors.email && <div className =\"alert alert-danger\">{errors.email}</div>}\r\n  </div>\r\n\r\n  <div className=\"text-center pt-4\">\r\n  <Button type =\"submit\" \r\n      className={classes.ForgetPasswordButton} >\r\n        SEND EMAIL\r\n      </Button>\r\n  </div>\r\n \r\n</form>\r\n    \r\n</Paper>\r\n     );\r\n}\r\n \r\nexport default ForgetPassword;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js",["99"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js",["100","101","102","103","104","105","106","107","108","109","110","111"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js",["112","113"],"import React, {useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./style.css\";\r\nimport axios from 'axios';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./../SignIn/Error\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  ResetPasswordButton: {\r\n    \r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: \"5px\",\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        width:'17rem',\r\n        padding: '0 30px ',\r\n        // marginTop:'2rem',\r\n        // marginBottom:'2rem', \r\n  }\r\n\r\n}));\r\n\r\nconst ResetPassword = (match) => {\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const classes = useStyles();\r\n  const ResetPasswordHandler = async (e) => {\r\n    e.preventDefault();    \r\n    const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n        if(password !== confirmPassword){\r\n          setPassword(\"\");\r\n          setConfirmPassword(\"\");\r\n          setTimeout(() => {\r\n            setError(\"\")\r\n          }, 5000);\r\n          return setError(\"password don't match\")\r\n        }\r\n        try{\r\n            const {data} = await axios.put(`/api/auth/passwordreset/${match.params.resetToken}`,{ password}, config);\r\n            setSuccess(data.data)\r\n             \r\n        }catch (error) {\r\n            \r\n          setError(error.response.data.error)\r\n          \r\n          setTimeout(() => {\r\n            setError(\"\");\r\n          }, 5000);\r\n          \r\n        }\r\n    }\r\n  //validation schema\r\n//   const ValidationSchema = Yup.object().shape({\r\n   \r\n//     password: Yup.string()\r\n//     .trim()\r\n//       .required(\"*Password is required.\")\r\n//       .min(8, \"*Password is too short - should be 8 chars minimum.\")\r\n//       .matches(/^(?=.*[0-9])/, \"*Password must contain a number.\"),\r\n\r\n      \r\n//     confirmPassword: Yup.string()\r\n//     .trim()\r\n//     .oneOf([Yup.ref('password'.trim())],\"Password should match\")\r\n//     .required(\"*Password is required.\"),\r\n\r\n//   });\r\n\r\n//  //on submition\r\n//  const HandleSubmit = (values, { setSubmitting, resetForm }) => {\r\n//   setSubmitting(true);\r\n\r\n\r\n//   Object.keys(values).map((key) => {\r\n//     values[key] = values[key].trim();\r\n// })\r\n\r\n// //removing confirmPassword\r\n// delete values.confirmPassword;\r\n\r\n//   setTimeout(() => {\r\n//     alert(JSON.stringify(values, null, 2));\r\n//     resetForm();\r\n\r\n//     setSubmitting(false);\r\n//   }, 500);\r\n\r\n// }\r\n\r\n\r\n  return (\r\n    <Formik\r\n    // initialValues={{\r\n    //   password: \"\",\r\n    //   confirmPassword: \"\",\r\n    // }}\r\n    // validationSchema={ValidationSchema}\r\n    // onSubmit={HandleSubmit}\r\n  >\r\n    {({\r\n      values,\r\n      errors,\r\n      touched,\r\n      handleChange,\r\n      handleBlur,\r\n      handleSubmit,\r\n      isSubmitting,\r\n      setFieldValue,\r\n    }) => (\r\n\r\n      //sign up form\r\n      <Paper className=\"ResetPasswordPaper sign-in-form\" elevation={3}>\r\n        {/* reset password heading */}\r\n        <h2 className=\"text-center pb-4 pt-5\">RESET PASSWORD</h2>\r\n        <form onSubmit={ResetPasswordHandler} className=\"row g-3\">\r\n        {success && <span className=\"success-message\">{success} <Link to=\"/log-in\">login</Link></span>}\r\n\r\n          {/* password */}\r\n          <div className=\"col-md-12\">\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={(e)=> setPassword(e.target.value)}\r\n              onBlur={handleBlur}\r\n              value={password}\r\n              className=\"form-control\"\r\n            />\r\n            <Error touched={touched.password} message={errors.password} />\r\n          </div>\r\n\r\n           {/* confirm password */}\r\n          <div className=\"col-md-12\">\r\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              onChange={(e)=> setConfirmPassword(e.target.value)}\r\n              onBlur={handleBlur}\r\n               value={confirmPassword}\r\n              className=\"form-control\"\r\n            />\r\n            <Error touched={touched.confirmPassword} message={errors.confirmPassword} />\r\n          </div>\r\n\r\n   <div className=\" ResetPasswordButton text-center pt-4\">\r\n     <Button type=\"submit\" className={classes.ResetPasswordButton}>\r\n       RESET PASSWORD\r\n     </Button>\r\n  </div>\r\n\r\n        </form>\r\n      </Paper>\r\n    )}\r\n  </Formik>\r\n \r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\routing\\PrivateRoute.js",["114","115"],"import { Component } from 'react';\r\nimport {Redirect, Route, route} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n        {...rest}\r\n    render={\r\n        (props) => \r\n            localStorage.getItem(\"authToken\") ? (\r\n                <Component {...props}/>\r\n            ) : (\r\n                <Redirect to=\"/log-in\"/>\r\n            )\r\n                \r\n            \r\n        }\r\n        />\r\n    )\r\n}\r\nexport default PrivateRoute;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js",["116"],"import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst SideBar = () => {\r\n    return (    <div className=\"Profile-side-bar\">\r\n          <img alt = \"profile picture\" className= \"profile-pic\" src= {\"https://tse4.mm.bing.net/th?id=OIP.RBwKn7ERfz_ieSbdE8pUBAHaE0&pid=Api&P=0&w=246&h=1611\"}></img>\r\n          <h1 className =\"Profile-name\">Rashika Rawat</h1>\r\n          <div className = \"Profile-profession\">Front-end developer</div>\r\n    </div> );\r\n}\r\n \r\nexport default SideBar;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\UpcomingAuctions\\UpcomingAuctions.js",["117","118","119","120","121","122"],"import React ,{useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Card, CardHeader, CardContent, Divider } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport AuctionCard from \"../../containers/AuctionCard/auctionCard\";\r\n\r\nconst UpcomingAuctions = () => {\r\n\r\n  const [upcomingAuctions, setUpcomingAuctions] = useState([\r\n    {\r\n      title:\"Beauty Banner\",\r\n      organisation: \"Ratan Tata limited\",\r\n      info:\"  An auction for Beautiful diamond earings and rings of original titan brand.\",\r\n      date:\"18/03/2021\",\r\n      time:\"4:45 PM\"\r\n    },\r\n    {\r\n      title:\"Biker Beast\",\r\n      organisation: \"Telsa time private limited\",\r\n      info:\"An auction for super powerful and strong bikes that can run on different terrain.\",\r\n      date:\"3/04/2021\",\r\n      time:\"11:00 AM\"\r\n    },\r\n    {\r\n      title:\"Hella Commet\",\r\n      organisation: \"Surya Dev limited\",\r\n      info:\"An auction for original handmade vase and flower pots.\",\r\n      date:\"15/03/2021\",\r\n      time:\"9:00 AM\"\r\n    },\r\n    {\r\n      title:\"Bhakti Corner\",\r\n      organisation: \"Prakaram Ashram\",\r\n      info:\"  An auction for handmade gods and goddess scupltures made by students of our Ashram.\",\r\n      date:\"20/03/2021\",\r\n      time:\"1:30 PM\"\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <div className =\"upcoming-auction-container\">\r\n\r\n      {\r\n        upcomingAuctions.map( (auction) => (\r\n          <AuctionCard\r\n          title = {auction.title}\r\n           organisation  = {auction.organisation}\r\n           info = {auction.info}\r\n           date = {auction.date}\r\n           time = {auction.time}\r\n  \r\n          ></AuctionCard>\r\n  ))\r\n      }\r\n     \r\n        \r\n    </div>\r\n  );\r\n};\r\nexport default UpcomingAuctions;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Navbar\\Navbar.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":20,"column":31,"nodeType":"129","endLine":20,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":21,"column":38,"nodeType":"129","endLine":21,"endColumn":43},{"ruleId":"130","severity":1,"message":"131","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":11},{"ruleId":"130","severity":1,"message":"134","line":29,"column":10,"nodeType":"132","messageId":"133","endLine":29,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":8,"column":9,"nodeType":"132","messageId":"133","endLine":8,"endColumn":13},{"ruleId":"130","severity":1,"message":"136","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":345,"column":18,"nodeType":"129","endLine":345,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":11},{"ruleId":"130","severity":1,"message":"137","line":33,"column":12,"nodeType":"132","messageId":"133","endLine":33,"endColumn":19},{"ruleId":"130","severity":1,"message":"138","line":33,"column":21,"nodeType":"132","messageId":"133","endLine":33,"endColumn":31},{"ruleId":"130","severity":1,"message":"139","line":34,"column":20,"nodeType":"132","messageId":"133","endLine":34,"endColumn":29},{"ruleId":"130","severity":1,"message":"136","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":15},{"ruleId":"130","severity":1,"message":"135","line":9,"column":10,"nodeType":"132","messageId":"133","endLine":9,"endColumn":14},{"ruleId":"130","severity":1,"message":"140","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":18},{"ruleId":"130","severity":1,"message":"141","line":10,"column":20,"nodeType":"132","messageId":"133","endLine":10,"endColumn":29},{"ruleId":"130","severity":1,"message":"142","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":17,"column":10,"nodeType":"132","messageId":"133","endLine":17,"endColumn":18},{"ruleId":"130","severity":1,"message":"144","line":21,"column":8,"nodeType":"132","messageId":"133","endLine":21,"endColumn":13},{"ruleId":"130","severity":1,"message":"145","line":25,"column":41,"nodeType":"132","messageId":"133","endLine":25,"endColumn":48},{"ruleId":"130","severity":1,"message":"146","line":26,"column":10,"nodeType":"132","messageId":"133","endLine":26,"endColumn":20},{"ruleId":"130","severity":1,"message":"147","line":27,"column":10,"nodeType":"132","messageId":"133","endLine":27,"endColumn":18},{"ruleId":"130","severity":1,"message":"148","line":28,"column":10,"nodeType":"132","messageId":"133","endLine":28,"endColumn":26},{"ruleId":"130","severity":1,"message":"149","line":29,"column":10,"nodeType":"132","messageId":"133","endLine":29,"endColumn":17},{"ruleId":"130","severity":1,"message":"150","line":30,"column":10,"nodeType":"132","messageId":"133","endLine":30,"endColumn":27},{"ruleId":"130","severity":1,"message":"151","line":8,"column":13,"nodeType":"132","messageId":"133","endLine":8,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":33,"column":10,"nodeType":"132","messageId":"133","endLine":33,"endColumn":15},{"ruleId":"130","severity":1,"message":"152","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":19},{"ruleId":"130","severity":1,"message":"153","line":2,"column":26,"nodeType":"132","messageId":"133","endLine":2,"endColumn":31},{"ruleId":"154","severity":1,"message":"155","line":6,"column":11,"nodeType":"156","endLine":6,"endColumn":161},{"ruleId":"130","severity":1,"message":"157","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":12},{"ruleId":"130","severity":1,"message":"158","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"159","line":3,"column":16,"nodeType":"132","messageId":"133","endLine":3,"endColumn":26},{"ruleId":"130","severity":1,"message":"160","line":3,"column":28,"nodeType":"132","messageId":"133","endLine":3,"endColumn":39},{"ruleId":"130","severity":1,"message":"145","line":3,"column":41,"nodeType":"132","messageId":"133","endLine":3,"endColumn":48},{"ruleId":"130","severity":1,"message":"161","line":9,"column":28,"nodeType":"132","messageId":"133","endLine":9,"endColumn":47},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Joi' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Carousel' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'GiCrucifix' is defined but never used.","'ImHammer' is defined but never used.","'BsArrowLeftRight' is defined but never used.","'BiRupee' is defined but never used.","'AiOutlineFileDone' is defined but never used.","'Yup' is defined but never used.","'Component' is defined but never used.","'route' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Grid' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'setUpcomingAuctions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]