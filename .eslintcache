[{"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js":"1","C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js":"2","C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js":"3","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js":"4","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js":"5","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js":"6","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js":"7","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js":"8","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js":"9","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js":"10","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js":"11","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js":"12","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js":"13","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js":"14","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\UpcomingAuctions\\UpcomingAuctions.js":"15","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js":"16"},{"size":500,"mtime":1610994752609,"results":"17","hashOfConfig":"18"},{"size":995,"mtime":1615525874623,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":12043,"mtime":1615353798576,"results":"21","hashOfConfig":"18"},{"size":431,"mtime":1613550191945,"results":"22","hashOfConfig":"18"},{"size":8012,"mtime":1615530289585,"results":"23","hashOfConfig":"18"},{"size":3565,"mtime":1615361071013,"results":"24","hashOfConfig":"18"},{"size":414,"mtime":1614791924413,"results":"25","hashOfConfig":"18"},{"size":2401,"mtime":1613706547945,"results":"26","hashOfConfig":"18"},{"size":477,"mtime":1613546352906,"results":"27","hashOfConfig":"18"},{"size":328,"mtime":1612945930216,"results":"28","hashOfConfig":"18"},{"size":2034,"mtime":1613709326828,"results":"29","hashOfConfig":"18"},{"size":3035,"mtime":1615348605489,"results":"30","hashOfConfig":"18"},{"size":3754,"mtime":1615353638578,"results":"31","hashOfConfig":"18"},{"size":628,"mtime":1615533302511,"results":"32","hashOfConfig":"18"},{"size":1448,"mtime":1615556299184,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dmh62m",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rashika\\Documents\\e-auction\\src\\index.js",[],["71","72"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\App.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\reportWebVitals.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\SignUp.js",["73","74"],"import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./style.css\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./Error\";\r\n\r\nconst SignUp = () => {\r\n\r\n  const emailTakens = [\r\n    \"test@gmail.com\",\r\n    \"rashikarawat01@gmail.com\"\r\n  ]\r\n\r\n  //validation schema\r\n  const ValidationSchema = Yup.object().shape({\r\n    fullname: Yup.string()\r\n    .trim()\r\n      .min(5, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Name is required\"),\r\n\r\n      profession: Yup.string()\r\n      .trim()\r\n      .min(2, \"*Too Short!\")\r\n      .max(50, \"*Too Long!\")\r\n      .required(\"*Profession is required\"),\r\n\r\n    zip: Yup.string()\r\n      .matches(/^[1-9][0-9]{5}$/,\r\n        \"*Invalid Zip\")\r\n      .required(\"*Zip is required\"),\r\n\r\n    password: Yup.string()\r\n    .trim()\r\n      .required(\"*Password is required.\")\r\n      .min(8, \"*Password is too short - should be 8 chars minimum.\")\r\n      .matches(/^(?=.*[0-9])/, \"*Password must contain a number.\"),\r\n\r\n      \r\n    confirmPassword: Yup.string()\r\n    .trim()\r\n    .oneOf([Yup.ref('password'.trim())],\"Password should match\")\r\n    .required(\"*Password is required.\"),\r\n\r\n    age: Yup.number()\r\n      .required(\"*Age is required\")\r\n      .min(18, \"*Must be above 18\")\r\n      .max(99, \"*Must be younger than 99\"),\r\n\r\n    address: Yup.string()\r\n    .trim()\r\n      .min(10, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*Address is required\"),\r\n\r\n    city: Yup.string()\r\n    .trim()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"*City is required\"),\r\n\r\n\r\n      about: Yup.string()\r\n      .trim()\r\n      .required(\"*About is required\")\r\n      .min(5, \"Too Short!\")\r\n      .max(250, \"Too Long!\"),\r\n\r\n    number: Yup.string()\r\n      .matches(/\\d{5}([- ]*)\\d{6}/, \"*Invalid phone number\")\r\n      .required(\"*Number is required\"),\r\n\r\n      \r\n    state: Yup.string()\r\n    .required(\"*State is required\"),\r\n\r\n    email: Yup.string()\r\n    .trim()\r\n      .lowercase()\r\n      .email(\"*Must be a valid email address\")\r\n      .notOneOf(emailTakens, \"*Email already taken\")\r\n      .required(\"*Email is required\"),\r\n  });\r\n\r\n  //on handle\r\n  const HandleSubmit = (values, { setSubmitting, resetForm }) => {\r\n    setSubmitting(true);\r\n\r\n\r\n    Object.keys(values).map((key) => {\r\n      values[key] = values[key].trim();\r\n})\r\n\r\n\r\n  //removing confirmPassword\r\n  delete values.confirmPassword;\r\n\r\n\r\n    setTimeout(() => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      resetForm();\r\n\r\n      setSubmitting(false);\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fullname: \"\",\r\n        profession:\"\",\r\n        number: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        about:\"\",\r\n        age: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state:\"\",\r\n        zip: \"\",\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={HandleSubmit}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue,\r\n      }) => (\r\n\r\n        //sign up form\r\n        <Paper className=\"sign-in-form\" elevation={3}>\r\n          {/* sign heading */}\r\n          <h1 className=\"text-center pb-5 sign-in-heading\">SIGN IN</h1>\r\n          <form onSubmit={handleSubmit} className=\"row g-3\">\r\n            {/* full name */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"fullname\" className=\"form-label\">\r\n                Full Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"fullname\"\r\n                onChange={handleChange}\r\n                id=\"fullname\"\r\n                onBlur={handleBlur}\r\n                value={values.fullname}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.fullname} message={errors.fullname} />\r\n            </div>\r\n\r\n            {/* profession */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"profession\" className=\"form-label\">\r\n                Profession\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"profession\"\r\n                id=\"profession\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.profession}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.profession} message={errors.profession} />\r\n            </div>\r\n\r\n            {/* phone number */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"number\" className=\"form-label\">\r\n                Contact Number\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"number\"\r\n                id=\"number\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.number}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.number} message={errors.number} />\r\n            </div>\r\n\r\n            {/* email */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email ID\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={handleChange}\r\n                value={values.email}\r\n                onBlur={handleBlur}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.email} message={errors.email} />\r\n            </div>\r\n\r\n            {/* password */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.password} message={errors.password} />\r\n            </div>\r\n\r\n             {/* confirm password */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                 value={values.confirmPassword}\r\n                className=\"form-control\"\r\n              />\r\n              <Error touched={touched.confirmPassword} message={errors.confirmPassword} />\r\n            </div>\r\n\r\n             {/* about */}\r\n            <div className=\"col-md-12\">\r\n              <label htmlFor=\"about\" className=\"form-label\">\r\n                About\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"about\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.about}\r\n                id=\"about\"\r\n                placeholder=\"Tell us something about you..\"\r\n              />\r\n              <Error touched={touched.about} message={errors.about} />\r\n            </div>\r\n\r\n            {/* age */}\r\n            <div className=\"col-md-3\">\r\n              <label htmlFor=\"age\" className=\"form-label\">\r\n                Age\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"age\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.age}\r\n                id=\"age\"\r\n              ></input>\r\n              <Error touched={touched.age} message={errors.age} />\r\n            </div>\r\n\r\n             {/* address */}\r\n            <div className=\"col-md-9\">\r\n              <label htmlFor=\"Address\" className=\"form-label\">\r\n                Full Address\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.address}\r\n                id=\"address\"\r\n                placeholder=\"Full Address ...\"\r\n              />\r\n              <Error touched={touched.address} message={errors.address} />\r\n            </div>\r\n             \r\n              {/* city */}\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"city\" className=\"form-label\">\r\n                City\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name = \"city\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                id=\"city\"\r\n                value={values.city}\r\n              />\r\n              <Error touched={touched.city} message={errors.city} />\r\n            </div>\r\n\r\n             {/* state */}\r\n            <div className=\"col-md-4\">\r\n              <label htmlFor=\"state\" className=\"form-label\">\r\n                State\r\n              </label>\r\n              <select id=\"state\" className=\"form-select\"\r\n                 type=\"text\"\r\n                 name = \"state\"\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n                 id=\"state\"\r\n                 value={values.state}>\r\n\r\n                <option selected></option>\r\n                <option>Andhra Pradesh</option>\r\n                <option>Arunachal Pradesh</option>\r\n                <option>Assam</option>\r\n                <option>Bihar</option>\r\n                <option>Chhattisgarh</option>\r\n                <option>Goa</option>\r\n                <option>Gujarat</option>\r\n                <option>Haryana</option>\r\n                <option>Himachal Pradesh</option>\r\n                <option>Jharkhand</option>\r\n                <option>Karnataka</option>\r\n                <option>Kerala</option>\r\n                <option>Madhya Pradesh</option>\r\n                <option>Maharashtra</option>\r\n                <option>Manipur</option>\r\n                <option>Meghalaya</option>\r\n                <option>Mizoram</option>\r\n                <option>Nagaland</option>\r\n                <option>Odisha</option>\r\n                <option>Punjab</option>\r\n                <option>Rajasthan</option>\r\n                <option>Sikkim</option>\r\n                <option>Tamil Nadu</option>\r\n                <option>Telangana</option>\r\n                <option>Tripura</option>\r\n                <option>Uttar Pradesh</option>\r\n                <option>Uttarakhand</option>\r\n                <option>West Bengal</option>\r\n              </select>\r\n              <Error touched={touched.state} message={errors.state} />\r\n            </div>\r\n\r\n             {/* zip */}\r\n            <div className=\"col-md-2\">\r\n              <label htmlfor=\"zip\" className=\"form-label\">\r\n                Zip\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name= \"zip\"\r\n                id=\"zip\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.zip}\r\n              />\r\n              <Error touched={touched.zip} message={errors.zip} />\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary sign-in-button\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile\\Profile.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Topmenu\\TopMenu.js",["75","76","77","78","79","80","81","82"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\Login\\LogIn.js",["83"],"import React ,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Joi from \"joi-browser\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n      LoginButton: {\r\n        \r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            border: 0,\r\n            borderRadius: \"5px\",\r\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n            color: 'white',\r\n            height: 48,\r\n            width:'17rem',\r\n            padding: '0 30px ',\r\n            // marginTop:'2rem',\r\n            // marginBottom:'2rem', \r\n      }\r\n    \r\n  }));\r\n\r\n\r\nconst LogIn = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [account, setAccount] = useState({ email :\"\", password: \"\"});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    \r\n  const  schema = {\r\n    email: Joi.string().email().required().label(\"Email Address\"),\r\n    password: Joi.string().required().label(\"Password\")\r\n  };\r\n\r\n    \r\n    const HandleSubmit =(e) =>{\r\n      e.preventDefault();\r\n      const errors  = validate();\r\n      (errors)?setErrors(errors):setErrors({});\r\n      if(errors)return;\r\n\r\n      const a = {...account};\r\n       Object.keys(a).map((key) => {\r\n             a[key] = a[key].trim();\r\n       })\r\n\r\n       setAccount(a);\r\n  \r\n        //call server\r\n\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(a, null, 2));\r\n        \r\n        }, 500);\r\n\r\n\r\n          }\r\n  \r\n\r\n    const validate = () =>{\r\n    \r\n    const {error} = Joi.validate(account, schema, {abortEarly:false});\r\n    if(!error)return null;\r\n\r\n    const errors = {};\r\n    for(let item of error.details)\r\n    errors[item.path[0]]=item.message;\r\n\r\nreturn errors;\r\n\r\n    }\r\n\r\n    const validateProperty = ({name, value}) =>{\r\n  \r\n      const obj = {[name]: value};\r\n      const subSchema = {\r\n      [name]:schema[name]\r\n      }\r\n\r\n      const {error} = Joi.validate(obj, subSchema)\r\n      return error? error.details[0].message:null;\r\n\r\n\r\n    }    \r\n\r\n   const HandleChange = ({currentTarget:input}) =>{\r\n    const a = {...account};\r\n    a[input.name]= input.value;\r\n\r\n    const e = {...errors};\r\n    const errorMessage = validateProperty(input);\r\n    if(errorMessage) e[input.name] = errorMessage;\r\n    else delete e[input.name];\r\n\r\n\r\n    setErrors(e);\r\n    setAccount(a);\r\n\r\n   } \r\n\r\n\r\n    return ( \r\n<Paper className=\"LoginPaper\" elevation={3}>\r\n\r\n<h1 className=\"text-center pb-4 pt-5\">LOG IN</h1>\r\n      <form onSubmit={HandleSubmit}>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email</label>\r\n    <input type=\"text\" value ={account.email} \r\n    onChange={HandleChange}\r\n    name = \"email\"\r\n     className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"></input>\r\n     {errors.email && <div className =\"alert alert-danger\">{errors.email}</div>}\r\n  </div>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n    <input type=\"password\" value ={account.password} \r\n    onChange={HandleChange}\r\n    name =\"password\"\r\n    className=\"form-control\" id=\"exampleInputPassword1\"></input>\r\n    {errors.password && <div className =\"alert alert-danger\">{errors.password}</div>}\r\n  </div>\r\n  <div className=\"text-center pt-4\">\r\n  <Button type =\"submit\" \r\n      className={classes.LoginButton} >\r\n        LOGIN\r\n      </Button>\r\n  </div>\r\n \r\n</form>\r\n    \r\n</Paper>\r\n     );\r\n}\r\n \r\nexport default LogIn;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\SignIn\\Error.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-center\\ProfileBar.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Profile-sidebar\\Sidebar.js",["84"],"import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst SideBar = () => {\r\n    return (    <div className=\"Profile-side-bar\">\r\n          <img alt = \"profile picture\" className= \"profile-pic\" src= {\"https://tse4.mm.bing.net/th?id=OIP.RBwKn7ERfz_ieSbdE8pUBAHaE0&pid=Api&P=0&w=246&h=1611\"}></img>\r\n          <h1 className =\"Profile-name\">Rashika Rawat</h1>\r\n          <div className = \"Profile-profession\">Front-end developer</div>\r\n    </div> );\r\n}\r\n \r\nexport default SideBar;","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\common\\CustomCarousel.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\Dasboard\\Dashboard.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ForgetPassword\\forgetPassword.js",[],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\ResetPassword\\ResetPassword.js",["85"],"import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./style.css\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Error from \"./../SignIn/Error\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  ResetPasswordButton: {\r\n    \r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: \"5px\",\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        width:'17rem',\r\n        padding: '0 30px ',\r\n        // marginTop:'2rem',\r\n        // marginBottom:'2rem', \r\n  }\r\n\r\n}));\r\n\r\nconst ResetPassword = () => {\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  //validation schema\r\n  const ValidationSchema = Yup.object().shape({\r\n   \r\n    password: Yup.string()\r\n    .trim()\r\n      .required(\"*Password is required.\")\r\n      .min(8, \"*Password is too short - should be 8 chars minimum.\")\r\n      .matches(/^(?=.*[0-9])/, \"*Password must contain a number.\"),\r\n\r\n      \r\n    confirmPassword: Yup.string()\r\n    .trim()\r\n    .oneOf([Yup.ref('password'.trim())],\"Password should match\")\r\n    .required(\"*Password is required.\"),\r\n\r\n  });\r\n\r\n //on submition\r\n const HandleSubmit = (values, { setSubmitting, resetForm }) => {\r\n  setSubmitting(true);\r\n\r\n\r\n  Object.keys(values).map((key) => {\r\n    values[key] = values[key].trim();\r\n})\r\n\r\n//removing confirmPassword\r\ndelete values.confirmPassword;\r\n\r\n  setTimeout(() => {\r\n    alert(JSON.stringify(values, null, 2));\r\n    resetForm();\r\n\r\n    setSubmitting(false);\r\n  }, 500);\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={{\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    }}\r\n    validationSchema={ValidationSchema}\r\n    onSubmit={HandleSubmit}\r\n  >\r\n    {({\r\n      values,\r\n      errors,\r\n      touched,\r\n      handleChange,\r\n      handleBlur,\r\n      handleSubmit,\r\n      isSubmitting,\r\n      setFieldValue,\r\n    }) => (\r\n\r\n      //sign up form\r\n      <Paper className=\"ResetPasswordPaper sign-in-form\" elevation={3}>\r\n        {/* reset password heading */}\r\n        <h2 className=\"text-center pb-4 pt-5\">RESET PASSWORD</h2>\r\n        <form onSubmit={handleSubmit} className=\"row g-3\">\r\n \r\n\r\n          {/* password */}\r\n          <div className=\"col-md-12\">\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              New Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.password}\r\n              className=\"form-control\"\r\n            />\r\n            <Error touched={touched.password} message={errors.password} />\r\n          </div>\r\n\r\n           {/* confirm password */}\r\n          <div className=\"col-md-12\">\r\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              id=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n               value={values.confirmPassword}\r\n              className=\"form-control\"\r\n            />\r\n            <Error touched={touched.confirmPassword} message={errors.confirmPassword} />\r\n          </div>\r\n\r\n   <div className=\" ResetPasswordButton text-center pt-4\">\r\n     <Button type=\"submit\" className={classes.ResetPasswordButton}>\r\n       RESET PASSWORD\r\n     </Button>\r\n  </div>\r\n\r\n        </form>\r\n      </Paper>\r\n    )}\r\n  </Formik>\r\n \r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\Rashika\\Documents\\e-auction\\src\\components\\UpcomingAuctions\\UpcomingAuctions.js",["86","87","88","89","90"],"C:\\Users\\Rashika\\Documents\\e-auction\\src\\containers\\AuctionCard\\auctionCard.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":91,"column":35,"nodeType":"97","messageId":"98","endLine":91,"endColumn":37},{"ruleId":"99","severity":1,"message":"100","line":324,"column":18,"nodeType":"101","endLine":324,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":15,"column":10,"nodeType":"104","messageId":"105","endLine":15,"endColumn":18},{"ruleId":"102","severity":1,"message":"106","line":19,"column":8,"nodeType":"104","messageId":"105","endLine":19,"endColumn":13},{"ruleId":"102","severity":1,"message":"107","line":23,"column":41,"nodeType":"104","messageId":"105","endLine":23,"endColumn":48},{"ruleId":"102","severity":1,"message":"108","line":24,"column":10,"nodeType":"104","messageId":"105","endLine":24,"endColumn":20},{"ruleId":"102","severity":1,"message":"109","line":25,"column":10,"nodeType":"104","messageId":"105","endLine":25,"endColumn":18},{"ruleId":"102","severity":1,"message":"110","line":27,"column":10,"nodeType":"104","messageId":"105","endLine":27,"endColumn":26},{"ruleId":"102","severity":1,"message":"111","line":28,"column":10,"nodeType":"104","messageId":"105","endLine":28,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":29,"column":10,"nodeType":"104","messageId":"105","endLine":29,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":49,"column":33,"nodeType":"97","messageId":"98","endLine":49,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":6,"column":11,"nodeType":"115","endLine":6,"endColumn":161},{"ruleId":"95","severity":1,"message":"96","line":56,"column":33,"nodeType":"97","messageId":"98","endLine":56,"endColumn":35},{"ruleId":"102","severity":1,"message":"116","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":12},{"ruleId":"102","severity":1,"message":"117","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"118","line":3,"column":16,"nodeType":"104","messageId":"105","endLine":3,"endColumn":26},{"ruleId":"102","severity":1,"message":"119","line":3,"column":28,"nodeType":"104","messageId":"105","endLine":3,"endColumn":39},{"ruleId":"102","severity":1,"message":"107","line":3,"column":41,"nodeType":"104","messageId":"105","endLine":3,"endColumn":48},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Divider' is defined but never used.","'GiCrucifix' is defined but never used.","'ImHammer' is defined but never used.","'BsArrowLeftRight' is defined but never used.","'BiRupee' is defined but never used.","'AiOutlineFileDone' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Grid' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","no-global-assign","no-unsafe-negation"]